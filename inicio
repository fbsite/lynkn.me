<!DOCTYPE html>
<html lang="pt-BR" class="">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>lynkn.me - Transforme seus links em experiências</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800&display=swap" rel="stylesheet">
    <script>
        // Lógica para aplicar o tema escuro/claro ao carregar a página
        if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
          document.documentElement.classList.add('dark')
        } else {
          document.documentElement.classList.remove('dark')
        }
    </script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .gradient-text {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        html.dark .gradient-text {
             background: linear-gradient(135deg, #8b9ff8 0%, #a27de0 100%);
            -webkit-background-clip: text;
        }
        .card-shadow {
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        html.dark .card-shadow {
            box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.2), 0 4px 6px -2px rgba(0, 0, 0, 0.1);
        }
        .preview-card, .bio-preview-phone {
            background-size: cover;
            background-position: center;
            transition: all 0.3s ease-in-out;
        }
        .modal-backdrop, .notification {
            transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
        }
        .modal-content {
            transition: transform 0.3s ease-in-out;
        }
        .tab-button {
            transition: color 0.2s, border-color 0.2s;
        }
        .tab-button.active {
            color: #667eea;
            border-color: #667eea;
        }
        html.dark .tab-button.active {
            color: #a27de0;
            border-color: #a27de0;
        }
        [x-cloak] { display: none !important; }
    </style>
</head>
<body x-data="app()" x-init="initFirebase()" class="bg-gray-50 text-gray-800 dark:bg-gray-900 dark:text-gray-200">

    <!-- Wrapper -->
    <div class="min-h-screen">

        <!-- Header -->
        <header class="sticky top-0 left-0 right-0 z-20 p-4 bg-transparent backdrop-blur-sm transition-all duration-300">
            <div class="container mx-auto flex justify-between items-center">
                <h2 class="text-2xl font-bold text-white">lynkn.me</h2>
                <div class="flex items-center gap-4">
                    <a href="#plans" class="text-white opacity-80 hover:opacity-100 transition hidden sm:block">Planos</a>
                    
                    <div x-show="!isLoggedIn" class="flex items-center gap-4">
                        <button @click="showModal = true" class="bg-white/20 text-white font-semibold py-2 px-4 rounded-lg hover:bg-white/30 transition-all duration-300">Entrar</button>
                    </div>

                    <div x-show="isLoggedIn" x-cloak class="flex items-center gap-4">
                        <span x-text="userId ? `ID: ${userId.substring(0, 8)}...` : ''" class="text-white text-sm hidden md:block"></span>
                        <button @click="logout()" class="bg-red-500/50 text-white font-semibold py-2 px-4 rounded-lg hover:bg-red-500/70 transition-all duration-300">Sair</button>
                    </div>

                    <!-- Dark Mode Toggle -->
                    <button @click="toggleTheme()" class="text-white p-2 rounded-lg bg-white/20 hover:bg-white/30">
                        <svg x-show="!isDarkMode" class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20"><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg>
                        <svg x-show="isDarkMode" x-cloak class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20"><path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 5.05A1 1 0 016.465 3.636l.707.707a1 1 0 01-1.414 1.414l-.707-.707a1 1 0 010-1.414zM3 11a1 1 0 100-2H2a1 1 0 100 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>
                    </button>
                </div>
            </div>
        </header>

        <!-- Hero Section -->
        <section id="hero" class="gradient-bg text-white pt-32 pb-20 relative overflow-hidden -mt-20">
            <div class="container mx-auto text-center px-4">
                <h1 class="text-4xl md:text-6xl font-extrabold leading-tight mb-4">Transforme seus links em experiências que vendem</h1>
                <p class="text-lg md:text-xl max-w-3xl mx-auto opacity-90 mb-8">Encurte, personalize e crie sua página de "Link na Bio". Tudo na nuvem.</p>
                <a href="#creator" class="bg-white text-indigo-600 font-bold py-3 px-8 rounded-lg text-lg hover:bg-gray-100 dark:hover:bg-gray-200 transform hover:scale-105 transition-all duration-300">Comece Grátis</a>
            </div>
             <div class="absolute -bottom-1 left-0 w-full h-16 bg-gray-50 dark:bg-gray-900" style="clip-path: polygon(0 100%, 100% 100%, 100% 0, 0 100%);"></div>
        </section>

        <!-- Link Creator Section -->
        <section id="creator" class="py-20">
            <div class="container mx-auto px-4">
                 <div class="max-w-6xl mx-auto">
                    <!-- TABS -->
                    <div class="mb-8 border-b border-gray-200 dark:border-gray-700">
                        <nav class="flex space-x-8" aria-label="Tabs">
                            <button @click="creatorMode = 'link'" :class="{ 'active': creatorMode === 'link' }" class="tab-button whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-lg text-gray-500 dark:text-gray-400 border-transparent">
                                Encurtar Link
                            </button>
                            <button @click="creatorMode = 'bio'" :class="{ 'active': creatorMode === 'bio' }" class="tab-button whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-lg text-gray-500 dark:text-gray-400 border-transparent">
                                Link na Bio
                            </button>
                        </nav>
                    </div>

                    <!-- Link Shortener View -->
                    <div x-show="creatorMode === 'link'" x-transition>
                        <div class="max-w-xl mx-auto">
                             <!-- Left Side: Form -->
                            <div class="flex flex-col">
                                <h3 class="text-2xl font-bold mb-1">Crie seu link irresistível</h3>
                                <p class="text-gray-500 dark:text-gray-400 mb-6">Suas personalizações são salvas na nuvem.</p>
                                
                                <div class="space-y-4">
                                    <div>
                                        <label for="originalUrl" class="block text-sm font-medium">Link Original</label>
                                        <input type="url" x-model="link.originalUrl" id="originalUrl" placeholder="https://seusite.com/produto-incrivel" class="mt-1 block w-full px-4 py-3 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 transition">
                                    </div>
                                    <div>
                                        <label for="customSlug" class="block text-sm font-medium">Slug Personalizado (opcional)</label>
                                        <div class="flex items-center mt-1">
                                            <span class="inline-flex items-center px-3 py-3 text-gray-500 bg-gray-100 dark:bg-gray-700 border border-r-0 border-gray-300 dark:border-gray-600 rounded-l-lg">lynkn.me/</span>
                                            <input type="text" x-model="link.slug" @input="updatePreview()" id="customSlug" placeholder="oferta-top" class="flex-1 block w-full px-4 py-3 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-r-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 transition">
                                        </div>
                                    </div>
                                    <div class="border-t dark:border-gray-700 pt-4">
                                        <h4 class="font-bold text-lg text-indigo-600 dark:text-indigo-400">Recursos Premium ✨</h4>
                                        <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">Faça upgrade para personalizar.</p>
                                        <div class="space-y-4" :class="{ 'opacity-50': userPlan === 'free' }">
                                            <div>
                                                <label for="gaId" class="block text-sm font-medium">ID do Google Analytics</label>
                                                <input type="text" x-model="link.gaId" id="gaId" placeholder="UA-12345678-9" class="mt-1 block w-full px-4 py-3 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm" :disabled="userPlan === 'free'">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                     <!-- Bio Link View -->
                    <div x-show="creatorMode === 'bio'" x-cloak x-transition>
                         <div class="grid lg:grid-cols-2 gap-12 items-start">
                            <!-- Left Side: Bio Form -->
                            <div class="flex flex-col">
                                <h3 class="text-2xl font-bold mb-1">Crie sua página "Link na Bio"</h3>
                                <p class="text-gray-500 dark:text-gray-400 mb-6">Agrupe seus links mais importantes em um só lugar.</p>
                                <div class="space-y-6">
                                    <div>
                                        <label for="bioPhoto" class="block text-sm font-medium">Foto de Perfil</label>
                                        <div class="mt-1 flex items-center gap-4">
                                            <span class="inline-block h-12 w-12 rounded-full overflow-hidden bg-gray-100 dark:bg-gray-700">
                                                <img x-show="bioPage.photoURL" :src="bioPage.photoURL" class="h-full w-full object-cover">
                                                <svg x-show="!bioPage.photoURL" class="h-full w-full text-gray-300 dark:text-gray-500" fill="currentColor" viewBox="0 0 24 24">
                                                    <path d="M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z" />
                                                </svg>
                                            </span>
                                            <input type="file" @change="uploadProfilePhoto($event)" id="bioPhoto" class="hidden" accept="image/*">
                                            <label for="bioPhoto" class="cursor-pointer rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 py-2 px-3 text-sm font-medium leading-4 text-gray-700 dark:text-gray-300 shadow-sm hover:bg-gray-50 dark:hover:bg-gray-700">Mudar</label>
                                            <div x-show="isUploadingPhoto" x-cloak class="text-sm text-gray-500">Enviando...</div>
                                        </div>
                                    </div>
                                    <div>
                                        <label for="bioTitle" class="block text-sm font-medium">Título (ex: @seunome)</label>
                                        <input type="text" x-model="bioPage.title" id="bioTitle" placeholder="Seu Nome ou Marca" class="mt-1 block w-full px-4 py-3 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 transition">
                                    </div>
                                     <div>
                                        <label for="bioDescription" class="block text-sm font-medium">Descrição</label>
                                        <textarea x-model="bioPage.description" id="bioDescription" rows="2" placeholder="Fale um pouco sobre você ou seus links." class="mt-1 block w-full px-4 py-3 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 transition"></textarea>
                                    </div>
                                    <!-- Premium Features for Bio Page -->
                                    <div class="border-t dark:border-gray-700 pt-4" :class="{ 'opacity-50': userPlan === 'free' }">
                                        <h4 class="font-bold text-lg text-indigo-600 dark:text-indigo-400">Recursos Premium ✨</h4>
                                        <div class="mt-4 space-y-4">
                                            <div class="flex items-center justify-between">
                                                <label for="verifiedBadge" class="font-medium">Selo de Verificado</label>
                                                <div class="relative inline-block w-10 mr-2 align-middle select-none transition duration-200 ease-in">
                                                    <input type="checkbox" x-model="bioPage.verified" name="verifiedBadge" id="verifiedBadge" class="toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-4 appearance-none cursor-pointer" :disabled="userPlan === 'free'"/>
                                                    <label for="verifiedBadge" class="toggle-label block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer"></label>
                                                </div>
                                            </div>
                                            <div>
                                                 <label for="bioTheme" class="block text-sm font-medium">Tema da Página</label>
                                                 <select x-model="bioPage.theme" id="bioTheme" class="mt-1 block w-full px-4 py-3 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm" :disabled="userPlan === 'free'">
                                                     <option value="default">Padrão (Azul/Roxo)</option>
                                                     <option value="forest">Floresta (Verde)</option>
                                                     <option value="sunset">Pôr do sol (Laranja/Rosa)</option>
                                                     <option value="minimal">Minimalista (Preto/Branco)</option>
                                                 </select>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="border-t dark:border-gray-700 pt-6">
                                        <h4 class="font-bold text-lg mb-4">Seus Links</h4>
                                        <div class="space-y-4">
                                            <template x-for="(bioLink, index) in bioPage.links" :key="index">
                                                <div class="flex items-center gap-4 p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg">
                                                    <div class="flex-grow grid grid-cols-1 md:grid-cols-2 gap-4">
                                                        <input type="text" x-model="bioLink.title" placeholder="Título do Link (ex: Meu Website)" class="w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md">
                                                        <input type="url" x-model="bioLink.url" placeholder="https://..." class="w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md">
                                                    </div>
                                                    <button @click="removeBioLinkField(index)" class="text-red-500 hover:text-red-700 p-2 rounded-md hover:bg-red-100 dark:hover:bg-red-900/50">
                                                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg>
                                                    </button>
                                                </div>
                                            </template>
                                        </div>
                                         <button @click="addBioLinkField()" class="mt-4 w-full py-2 px-6 border-2 border-dashed border-gray-300 dark:border-gray-600 text-gray-500 dark:text-gray-400 font-semibold rounded-lg hover:border-indigo-500 hover:text-indigo-500 transition-all">
                                            + Adicionar novo link
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <!-- Right Side: Bio Preview -->
                            <div>
                                <h3 class="text-2xl font-bold mb-1">Pré-visualização</h3>
                                <p class="text-gray-500 dark:text-gray-400 mb-6">Veja como sua página ficará.</p>
                                <!-- Phone mock -->
                                <div class="w-full max-w-sm mx-auto bg-gray-800 dark:bg-gray-600 rounded-[40px] border-[10px] border-current shadow-xl overflow-hidden bio-preview-phone" :class="getThemeClasses().phoneBorder">
                                    <div class="w-full h-[600px] overflow-y-auto p-6" :class="getThemeClasses().background">
                                        <div class="text-center" :class="getThemeClasses().text">
                                            <div class="w-24 h-24 rounded-full mx-auto mb-4 flex items-center justify-center ring-4 overflow-hidden" :class="getThemeClasses().avatarRing">
                                                <img x-show="bioPage.photoURL" :src="bioPage.photoURL" class="w-full h-full object-cover">
                                                <svg x-show="!bioPage.photoURL" class="w-12 h-12 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path></svg>
                                            </div>
                                            <div class="flex justify-center items-center gap-2">
                                                <h4 class="font-bold text-xl" x-text="bioPage.title || '@seunome'"></h4>
                                                <svg x-show="bioPage.verified" x-cloak class="w-5 h-5 text-blue-500" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path></svg>
                                            </div>
                                            <p class="text-sm mt-1" :class="getThemeClasses().subtext" x-text="bioPage.description || 'Sua descrição aqui.'"></p>
                                        </div>
                                        <div class="mt-8 space-y-4">
                                            <template x-for="bioLink in bioPage.links.filter(l => l.title)">
                                                <a href="#" @click.prevent class="block w-full text-center p-4 rounded-lg shadow font-semibold hover:scale-105 transition-transform" :class="getThemeClasses().button" x-text="bioLink.title"></a>
                                            </template>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Action Button -->
                     <div class="pt-6 mt-6 border-t dark:border-gray-700">
                        <button @click="creatorMode === 'link' ? saveLink() : saveBioPage()" :disabled="!isLoggedIn" class="w-full py-3 px-6 bg-indigo-600 text-white font-bold rounded-lg hover:bg-indigo-700 transition-all disabled:bg-gray-400 disabled:cursor-not-allowed">
                            <span x-show="isLoggedIn && creatorMode === 'link'">Salvar Link</span>
                            <span x-show="isLoggedIn && creatorMode === 'bio'">Salvar Página Bio</span>
                            <span x-show="!isLoggedIn">Faça login para salvar</span>
                        </button>
                    </div>

                 </div>
            </div>
        </section>

        <!-- My Links Section -->
        <section x-show="isLoggedIn" x-cloak id="my-links" class="py-20 bg-white dark:bg-gray-800">
            <div class="container mx-auto px-4">
                <div class="text-center mb-12">
                     <h2 class="text-3xl md:text-4xl font-extrabold">Meus Itens Salvos</h2>
                     <p class="text-lg text-gray-600 dark:text-gray-300 mt-2 max-w-2xl mx-auto">Gerencie seus links e sua página "Link na Bio".</p>
                </div>
                <div class="max-w-4xl mx-auto">
                    <div x-show="userLinks.length === 0" class="text-center text-gray-500 dark:text-gray-400 p-8 border-2 border-dashed rounded-lg">
                        <p>Você ainda não criou nenhum item.</p>
                        <p>Use o formulário acima para começar!</p>
                    </div>
                    <div class="space-y-4">
                        <template x-for="userLink in userLinks" :key="userLink.id">
                             <div class="bg-gray-50 dark:bg-gray-700 p-4 rounded-lg flex items-center justify-between flex-wrap gap-4">
                                <div class="flex-1 min-w-[200px]">
                                    <p class="font-bold text-indigo-600 dark:text-indigo-400" x-text="`lynkn.me/${userLink.slug}`"></p>
                                    <p class="text-sm text-gray-500 dark:text-gray-400 truncate" x-text="userLink.originalUrl"></p>
                                </div>
                                <div class="flex items-center gap-4">
                                    <span class="text-sm text-gray-500">Cliques: 0</span>
                                    <button @click="deleteLink(userLink.id)" class="text-red-500 hover:text-red-700 p-2 rounded-md hover:bg-red-100 dark:hover:bg-red-900/50">
                                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg>
                                    </button>
                                </div>
                            </div>
                        </template>
                    </div>
                </div>
            </div>
        </section>

        <!-- Plans Section -->
        <section id="plans" class="py-20">
            <div class="container mx-auto px-4">
                <div class="text-center mb-12">
                    <h2 class="text-3xl md:text-4xl font-extrabold">Planos para todos os níveis</h2>
                    <p class="text-lg text-gray-600 dark:text-gray-300 mt-2">Comece grátis e evolua quando precisar de mais poder.</p>
                </div>
                <div class="flex flex-col sm:flex-row justify-center items-center gap-8">
                    <!-- Free Plan -->
                    <div class="w-full max-w-sm border border-gray-200 dark:border-gray-700 rounded-xl p-8 card-shadow bg-white dark:bg-gray-800">
                        <h3 class="text-2xl font-bold text-center">Gratuito</h3>
                        <p class="text-gray-500 dark:text-gray-400 text-center mt-2 mb-6">Para começar com o essencial.</p>
                        <p class="text-center mb-6"><span class="text-4xl font-extrabold">R$0</span></p>
                        <ul class="space-y-3 mb-8">
                            <li class="flex items-center"><svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Encurtador de links</li>
                            <li class="flex items-center"><svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>1 Página "Link na Bio"</li>
                            <li class="flex items-center text-gray-400 dark:text-gray-500"><svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>Personalização Avançada</li>
                             <li class="flex items-center text-gray-400 dark:text-gray-500"><svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>Google Analytics</li>
                        </ul>
                        <button class="w-full py-3 px-6 border border-indigo-600 text-indigo-600 dark:border-indigo-400 dark:text-indigo-400 font-bold rounded-lg hover:bg-indigo-50 dark:hover:bg-indigo-900/20 transition-all">Seu plano atual</button>
                    </div>

                    <!-- Premium Plan -->
                    <div class="w-full max-w-sm border-2 border-indigo-600 dark:border-indigo-500 rounded-xl p-8 card-shadow bg-white dark:bg-gray-800 relative">
                         <span class="absolute top-0 -translate-y-1/2 left-1/2 -translate-x-1/2 bg-indigo-600 text-white text-xs font-bold px-3 py-1 rounded-full uppercase">Mais Popular</span>
                        <h3 class="text-2xl font-bold text-center text-indigo-600 dark:text-indigo-400">Premium</h3>
                        <p class="text-gray-500 dark:text-gray-400 text-center mt-2 mb-6">Para quem busca o máximo de conversão.</p>
                        <p class="text-center mb-6"><span class="text-4xl font-extrabold">R$29</span><span class="text-gray-500 dark:text-gray-400">/mês</span></p>
                        <ul class="space-y-3 mb-8">
                            <li class="flex items-center"><svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Todos recursos do Gratuito</li>
                            <li class="flex items-center"><svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Personalização Completa</li>
                            <li class="flex items-center"><svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Google Analytics</li>
                             <li class="flex items-center"><svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path></svg>Selo de Verificado</li>
                        </ul>
                        <button class="w-full py-3 px-6 bg-indigo-600 text-white font-bold rounded-lg hover:bg-indigo-700 transform hover:scale-105 transition-all">Fazer Upgrade</button>
                    </div>
                </div>
            </div>
        </section>

        <!-- Footer -->
        <footer class="bg-gray-900 dark:bg-black text-white py-12">
            <div class="container mx-auto px-4 text-center">
                <p>&copy; <span x-text="new Date().getFullYear()"></span> lynkn.me. Todos os direitos reservados.</p>
            </div>
        </footer>
    </div>
    
    <!-- Login Modal -->
    <div x-show="showModal" x-cloak class="fixed inset-0 z-50 flex items-center justify-center bg-black/60 modal-backdrop p-4" @click.self="showModal = false" x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="ease-in duration-200" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
        <div class="bg-white dark:bg-gray-800 rounded-2xl w-full max-w-md p-8 card-shadow modal-content" x-show="showModal" x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0 transform scale-95" x-transition:enter-end="opacity-100 transform scale-100" x-transition:leave="ease-in duration-200" x-transition:leave-start="opacity-100 transform scale-100" x-transition:leave-end="opacity-0 transform scale-95">
             <div class="flex justify-between items-center mb-6">
                 <h2 class="text-2xl font-bold">Acesse ou Crie sua Conta</h2>
                 <button @click="showModal = false" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-200">
                      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                 </button>
             </div>

            <div class="space-y-4">
                 <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Email</label>
                    <input type="email" x-model="credentials.email" id="email" class="mt-1 block w-full px-4 py-3 bg-gray-50 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
                 </div>
                 <div>
                    <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Senha</label>
                    <input type="password" x-model="credentials.password" id="password" class="mt-1 block w-full px-4 py-3 bg-gray-50 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
                 </div>
                 <div class="flex gap-4">
                    <button @click="login()" class="w-full py-3 px-6 bg-indigo-600 text-white font-bold rounded-lg hover:bg-indigo-700 transition-all">Entrar</button>
                    <button @click="signup()" class="w-full py-3 px-6 border border-indigo-600 text-indigo-600 font-bold rounded-lg hover:bg-indigo-50 dark:hover:bg-indigo-900/30 transition-all">Cadastrar</button>
                 </div>
            </div>
        </div>
    </div>

    <!-- Notification -->
    <div x-show="notification.show" x-cloak class="notification fixed bottom-5 right-5 bg-gray-800 text-white py-3 px-5 rounded-lg card-shadow" x-transition:enter="ease-out duration-300" x-transition:enter-start="opacity-0 transform translate-y-2" x-transition:enter-end="opacity-100 transform translate-y-0" x-transition:leave="ease-in duration-200" x-transition:leave-start="opacity-100 transform translate-y-0" x-transition:leave-end="opacity-0 transform translate-y-2">
        <p x-text="notification.message"></p>
    </div>

    <!-- Firebase and AlpineJS Scripts -->
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
        import { getAuth, setPersistence, browserSessionPersistence, signInWithEmailAndPassword, createUserWithEmailAndPassword, onAuthStateChanged, signOut, signInAnonymously, signInWithCustomToken } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";
        import { getFirestore, collection, addDoc, serverTimestamp, query, onSnapshot, doc, deleteDoc, setDoc, getDoc } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";
        import "https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js";

        // --- AlpineJS Data ---
        window.app = function() {
            return {
                // State
                isLoggedIn: false,
                isDarkMode: false,
                isUploadingPhoto: false,
                showModal: false,
                userId: null,
                userPlan: 'free',
                userLinks: [],
                creatorMode: 'link', // 'link' or 'bio'
                credentials: { email: '', password: '' },
                link: {
                    originalUrl: '',
                    slug: '',
                    gaId: '',
                },
                bioPage: {
                    title: '',
                    description: '',
                    links: [{ title: '', url: '' }],
                    verified: false,
                    theme: 'default',
                    photoURL: ''
                },
                notification: { show: false, message: '' },
                
                // Firebase Services
                auth: null,
                db: null,
                appId: typeof __app_id !== 'undefined' ? __app_id : 'default-app-id',
                unsubscribeLinks: null,
                
                // Methods
                initFirebase() {
                    this.isDarkMode = document.documentElement.classList.contains('dark');
                    const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : {};
                    
                    if (Object.keys(firebaseConfig).length === 0) {
                        console.error("Configuração do Firebase não encontrada.");
                        this.showNotification("Erro: Configuração do Firebase não encontrada.");
                        return;
                    }

                    const app = initializeApp(firebaseConfig);
                    this.auth = getAuth(app);
                    this.db = getFirestore(app);
                    
                    this.handleAuthState();
                },

                async handleAuthState() {
                    await setPersistence(this.auth, browserSessionPersistence);
                    
                    onAuthStateChanged(this.auth, async (user) => {
                        if (this.unsubscribeLinks) this.unsubscribeLinks();
                        
                        if (user && !user.isAnonymous) {
                            this.isLoggedIn = true;
                            this.userId = user.uid;
                            this.showModal = false;
                            
                            this.loadUserLinks();
                            this.loadUserData();

                        } else {
                            this.isLoggedIn = false;
                            this.userId = user ? user.uid : null;
                            this.userLinks = [];
                            this.userPlan = 'free';
                            this.bioPage = { title: '', description: '', links: [{ title: '', url: '' }], verified: false, theme: 'default', photoURL: '' };
                            
                            if (!user) {
                                try {
                                    await signInAnonymously(this.auth);
                                } catch(error) {
                                    console.error("Falha ao fazer login anônimo:", error);
                                }
                            }
                        }
                    });

                    if (!this.auth.currentUser) {
                         try {
                            if (typeof __initial_auth_token !== 'undefined' && __initial_auth_token) {
                                await signInWithCustomToken(this.auth, __initial_auth_token);
                            } else {
                                await signInAnonymously(this.auth);
                            }
                        } catch (error) {
                            console.error("Erro na autenticação inicial:", error);
                        }
                    }
                },

                async signup() {
                    try {
                        const userCredential = await createUserWithEmailAndPassword(this.auth, this.credentials.email, this.credentials.password);
                        const userProfileRef = doc(this.db, 'artifacts', this.appId, 'users', userCredential.user.uid);
                        await setDoc(userProfileRef, {
                            email: userCredential.user.email,
                            plan: 'free',
                            createdAt: serverTimestamp(),
                            bioTitle: `@${userCredential.user.email.split('@')[0]}`,
                            bioDescription: '',
                            bioLinks: [],
                            bioTheme: 'default',
                            bioVerified: false,
                            bioPhotoURL: ''
                        });
                        this.showNotification("Conta criada com sucesso!");
                    } catch (error) {
                        this.showNotification(`Erro: ${error.message}`);
                    }
                },
                
                async login() {
                    try {
                        await signInWithEmailAndPassword(this.auth, this.credentials.email, this.credentials.password);
                        this.showNotification("Login efetuado com sucesso!");
                    } catch (error) {
                        this.showNotification(`Erro: ${error.message}`);
                    }
                },
                
                async logout() {
                    await signOut(this.auth);
                    this.showNotification("Você foi desconectado.");
                },

                async saveLink() {
                    if (!this.link.originalUrl || !this.userId || (this.auth.currentUser && this.auth.currentUser.isAnonymous)) {
                        this.showNotification("Faça login para salvar um link.");
                        this.showModal = true;
                        return;
                    }
                    try {
                        const linksCollection = collection(this.db, 'artifacts', this.appId, 'users', this.userId, 'links');
                        await addDoc(linksCollection, {
                            originalUrl: this.link.originalUrl,
                            slug: this.link.slug || this.generateRandomSlug(),
                            gaId: this.userPlan === 'premium' ? this.link.gaId : '',
                            createdAt: serverTimestamp(),
                            clicks: 0
                        });
                        this.showNotification("Link salvo com sucesso!");
                        this.link.originalUrl = '';
                        this.link.slug = '';
                    } catch (error) {
                        this.showNotification(`Erro ao salvar: ${error.message}`);
                    }
                },
                
                async saveBioPage() {
                    if (!this.userId || (this.auth.currentUser && this.auth.currentUser.isAnonymous)) {
                        this.showNotification("Faça login para salvar sua página.");
                        this.showModal = true;
                        return;
                    }
                    try {
                        const userProfileRef = doc(this.db, 'artifacts', this.appId, 'users', this.userId);
                        const linksToSave = this.bioPage.links.filter(link => link.title.trim() !== '' && link.url.trim() !== '');
                        await setDoc(userProfileRef, {
                            bioTitle: this.bioPage.title,
                            bioDescription: this.bioPage.description,
                            bioLinks: linksToSave,
                            bioTheme: this.userPlan === 'premium' ? this.bioPage.theme : 'default',
                            bioVerified: this.userPlan === 'premium' ? this.bioPage.verified : false,
                            bioPhotoURL: this.bioPage.photoURL,
                            updatedAt: serverTimestamp()
                        }, { merge: true });
                         this.showNotification("Página 'Link na Bio' salva com sucesso!");
                    } catch (error) {
                        this.showNotification(`Erro ao salvar página: ${error.message}`);
                    }
                },

                loadUserLinks() {
                    if (!this.userId || (this.auth.currentUser && this.auth.currentUser.isAnonymous)) return;
                    const linksCollection = collection(this.db, 'artifacts', this.appId, 'users', this.userId, 'links');
                    const q = query(linksCollection);
                    
                    this.unsubscribeLinks = onSnapshot(q, (querySnapshot) => {
                        this.userLinks = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
                    }, (error) => {
                        console.error("Firebase Snapshot Error:", error);
                    });
                },

                async loadUserData() {
                    if (!this.userId || (this.auth.currentUser && this.auth.currentUser.isAnonymous)) return;
                    const userProfileRef = doc(this.db, 'artifacts', this.appId, 'users', this.userId);
                    try {
                        const docSnap = await getDoc(userProfileRef);
                        if (docSnap.exists()) {
                            const data = docSnap.data();
                            this.userPlan = data.plan || 'free';
                            this.bioPage.title = data.bioTitle || '';
                            this.bioPage.description = data.bioDescription || '';
                            this.bioPage.links = data.bioLinks && data.bioLinks.length > 0 ? data.bioLinks : [{ title: '', url: '' }];
                            this.bioPage.theme = data.bioTheme || 'default';
                            this.bioPage.verified = data.bioVerified || false;
                            this.bioPage.photoURL = data.bioPhotoURL || '';
                        } else {
                             this.userPlan = 'free';
                             this.bioPage = { title: '', description: '', links: [{ title: '', url: '' }], theme: 'default', verified: false, photoURL: '' };
                        }
                    } catch (error) {
                         console.error("Erro ao carregar dados do usuário:", error);
                         this.showNotification("Erro ao carregar seus dados de perfil.");
                         this.userPlan = 'free';
                    }
                },
                
                async uploadProfilePhoto(event) {
                    const file = event.target.files[0];
                    if (!file || !this.userId || (this.auth.currentUser && this.auth.currentUser.isAnonymous)) {
                        if (!this.userId || (this.auth.currentUser && this.auth.currentUser.isAnonymous)) {
                            this.showNotification("Faça login para enviar uma foto.");
                            this.showModal = true;
                        }
                        return;
                    }

                    // Obtenha sua chave de API gratuita em https://api.imgbb.com/
                    const apiKey = 'YOUR_IMGBB_API_KEY'; // cc86c1e0e12b7ffe3d91899dc867df60

                    if(apiKey === 'YOUR_IMGBB_API_KEY') {
                        this.showNotification("Erro: A chave da API do ImgBB não está configurada.");
                        console.error("Configure sua chave de API do ImgBB no código para fazer o upload de imagens.");
                        return;
                    }

                    this.isUploadingPhoto = true;
                    
                    const formData = new FormData();
                    formData.append('image', file);

                    try {
                        const response = await fetch(`https://api.imgbb.com/1/upload?key=${apiKey}`, {
                            method: 'POST',
                            body: formData,
                        });

                        const result = await response.json();

                        if (result.success) {
                            this.bioPage.photoURL = result.data.url;
                            await this.saveBioPage();
                            this.showNotification("Foto de perfil atualizada!");
                        } else {
                            throw new Error(result.error.message);
                        }
                    } catch (error) {
                        console.error("Erro no upload da foto para o ImgBB:", error);
                        this.showNotification(`Erro ao enviar a foto: ${error.message}`);
                    } finally {
                        this.isUploadingPhoto = false;
                    }
                },

                addBioLinkField() {
                    this.bioPage.links.push({ title: '', url: '' });
                },

                removeBioLinkField(index) {
                    this.bioPage.links.splice(index, 1);
                },

                async deleteLink(linkId) {
                    try {
                        const linkDoc = doc(this.db, 'artifacts', this.appId, 'users', this.userId, 'links', linkId);
                        await deleteDoc(linkDoc);
                        this.showNotification("Link apagado.");
                    } catch (error) {
                         this.showNotification(`Erro ao apagar o link: ${error.message}`);
                    }
                },
                
                getThemeClasses() {
                    const theme = this.userPlan === 'premium' ? this.bioPage.theme : 'default';
                    switch(theme) {
                        case 'forest':
                            return { background: 'bg-green-50', text: 'text-green-900', subtext: 'text-green-700', button: 'bg-green-600 text-white', avatarRing: 'ring-green-300', phoneBorder: 'border-green-800' };
                        case 'sunset':
                             return { background: 'bg-orange-50', text: 'text-orange-900', subtext: 'text-orange-700', button: 'bg-orange-500 text-white', avatarRing: 'ring-orange-300', phoneBorder: 'border-orange-800' };
                        case 'minimal':
                            return { background: 'bg-white', text: 'text-black', subtext: 'text-gray-500', button: 'bg-black text-white', avatarRing: 'ring-gray-300', phoneBorder: 'border-black' };
                        default: // default
                            return { background: 'bg-indigo-50', text: 'text-indigo-900', subtext: 'text-indigo-700', button: 'bg-indigo-600 text-white', avatarRing: 'ring-indigo-300', phoneBorder: 'border-indigo-800' };
                    }
                },

                generateRandomSlug(length = 6) {
                    return Math.random().toString(36).substring(2, 2 + length);
                },

                toggleTheme() {
                    this.isDarkMode = !this.isDarkMode;
                    document.documentElement.classList.toggle('dark', this.isDarkMode);
                    localStorage.theme = this.isDarkMode ? 'dark' : 'light';
                },

                showNotification(message) {
                    this.notification.message = message;
                    this.notification.show = true;
                    setTimeout(() => {
                        this.notification.show = false;
                    }, 3000);
                }
            }
        }
    </script>
</body>
</html>
